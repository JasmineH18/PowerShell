The Active Directory module for Windows PowerShell is a PowerShell module that consolidates a group of cmdlets. You can use these cmdlets to manage your Active Directory domains, Active Directory Lightweight Directory Services (AD LDS) configuration sets, and Active Directory Database Mounting Tool instances in a single, self-contained package.

You have to run the commands as Administrator.

Import-Module ActiveDirectory:
This command will load AD Cmdlets with Import-Module ActiveDirectory


Get-Command -Module ActiveDirectory: 
This command will list of all the cmdlets available in the Active Directory module


Example 1:
New-ADOrganizationalUnit -Name "MCU" -Path "DC=marvel, DC=org"

-New-ADOrganizationalUnit: This is the cmdlet used to create a new Organizational Unit in Active Directory.
-Name 'MCU': This parameter specifies the name of the new OU, which in this case is 'MCU'.
-Path 'DC=marvel, DC=org': This parameter specifies the path where the new OU will be created. In this example, the OU will be created under the 'marvel.org' domain.

Example 2: 
New-ADUser -Name "Natasha Romanoff" -SamAccountName "nromanoff" -UserPrincipalName "nromanoff@marvel.org" -Path "OU=Black Widow, OU=Superheroes, OU=MCU, DC=Marvel, DC=org" -AccountPassword (ConvertTo-SecureString "M@rv3l$ecrt$19!" -AsPlainText -force) -Enabled $true?

New-ADUser: This is the cmdlet used to create a new user account in Active Directory.
-Name 'Natasha Romanoff': This parameter specifies the display name of the new user, which in this case is 'Natasha Romanoff'.
-SamAccountName 'nromanoff': This parameter specifies the SamAccountName for the user, which is a unique identifier for the user account.
-UserPrincipalName 'nromanoff@marvel.org': This parameter specifies the User Principal Name (UPN) for the user, which is used for user logins.
-Path 'OU=Black Widow, OU=Superheroes, OU=MCU, DC=Marvel, DC=org': This parameter specifies the Organizational Unit (OU) path where the new user account will be created.
-AccountPassword (ConvertTo-SecureString 'M@rv3l$ecrt$19!' -AsPlainText -Force): This parameter sets the password for the new user account. The password is converted to a secure string using the ConvertTo-SecureString cmdlet.
-Enabled $true: This parameter specifies that the user account should be enabled (active).


Get-ADUser:
Get user information with Get-ADUser
In the PowerShell Terminal:
Get-ADUser nfury

This command will return details such as the user's name, email address, group memberships, and other attributes stored in the Active Directory for the user "nfury".


You can set the user to a variable.
In the PowerShell Terminal:
$user = Get-ADUser nfury
$user

-The $user variable is being assigned the result of the Get-ADUser cmdlet with the parameter 'nfury'.
-The Get-ADUser cmdlet is used to retrieve information about Active Directory users.
-By specifying 'nfury' after Get-ADUser, the command is requesting information about the user with the username 'nfury' from the Active Directory.
-The information about the user 'nfury' will be stored in the $user variable for further processing or manipulation in the PowerShell script.


You can get the user values with the user variable.
In the PowerShell Terminal:
$user.DistinguishedName

-$user.DistinguishedName refers to the Distinguished Name property of the user object stored in the variable $user.
-The Distinguished Name is a unique identifier for the user object within the Active Directory hierarchy.
-It provides the full path to the user object, including the organizational units (OUs) and domain components (DCs) that the user belongs to.
-The Distinguished Name is commonly used to uniquely identify and locate user objects within the Active Directory structure.


Check user variable is enabled.
$user.Enabled

-The syntax $user.Enabled is used to access the "Enabled" property of the object stored in the variable $user.
-This property typically represents the account status of a user in Active Directory, indicating whether the user account is currently enabled or disabled.
-When you use $user.Enabled, you are retrieving the value of the "Enabled" property for the user object stored in the variable $user.
-The value returned will be a boolean (true or false) indicating whether the user account is enabled (true) or disabled (false).


View specific properties.

Example 1
In the PowerShell terminal:
Get-ADUser -Identity “wmaximoff" | Select-Object Name,SamAccountName,UserPrincipalName

-The command Get-ADUser is used to retrieve information about an Active Directory user.
-The -Identity parameter specifies the user "wmaximoff" whose information will be retrieved.
-The pipe symbol "|" is used to pass the output of the Get-ADUser command to the Select-Object cmdlet.
-In this case, the properties Name, SamAccountName, and UserPrincipalName are selected for the user with the identity "wmaximoff".
-Select-Object is used to choose specific properties of the user object to display.

Example 1
In the PowerShell terminal:
$ADUser = Get-ADUser -Identity “wmaximoff" | Select-Object Name,SamAccountName,UserPrincipalName

-The variable $ADUser is being assigned the result of the Get-ADUser cmdlet with the Identity parameter set to "wmaximoff".
-The pipe symbol "|" is used to pass the output of the Get-ADUser cmdlet to the Select-Object cmdlet.
-The Select-Object cmdlet is used to choose specific properties of the user object to display.
-In this case, the properties Name, SamAccountName, and UserPrincipalName are selected for the user with the identity "wmaximoff".
-The variable $ADUser will now contain the selected properties of the user "wmaximoff" retrieved from Active Directory.


You can loop through a some users, can get a collection of users, or you want to display different information
In the PowerShell Terminal:
$user.DistinguishedName | Out-File user.txt
ls
cat .\user.txt
Ouput: You'll see the value for user.txt

-The variable $user represents the user object whose Distinguished Name is being accessed.
-The Distinguished Name is a unique identifier for the user object within Active Directory.
-The "|" symbol is used to pass the output of the Distinguished Name to the Out-File cmdlet.
-The Out-File cmdlet is used to write the output to a text file named "user.txt" in the current directory.


Change user information with Set-ADUser
In the PowerShell Terminal:
Set-ADUser -Identity nfury -SurName Fury
Get-ADUser nfury
Output: It will show the new surname of that user

- The Set-ADUser cmdlet in PowerShell is used to modify attributes of an Active Directory user.
- In the command "Set-ADUser -Identity nfury -SurName Fury", the surname (last name) of the user with the identity "nfury" will be changed to "Fury".
- This command will update the surname attribute of the user "nfury" in Active Directory to reflect the new value "Fury".


Add a user to a group with Add-ADGroupMember
In the PowerShell Terminal:
Add-ADGroupMember -Identity Marvel -Members nfury
Username will appear in AD group name in the 'Members' tab.


Remove a user from a group with Remove-ADGroupMember
In the PowerShell Terminal:
Remove-ADGroupMember -Identity Marvel -Members nfurry
Confirm [Y] Yes
Username will not appear in AD group name in the 'Members' tab.


Turn on advanced features in Active Directory Users & Computers
In the Active Directory:
'View' tab > Select/Checkmark 'Advanced Features'
Select a user name > Right click > Properties > Attribute Editor
You'll be able to see individual attributes you can view and modify, such as user account information, group memberships, and security settings


Add a new user with New-ADUser
In the PowerShell Terminal:
New-ADUser -Name "Natasha Romanoff" -GivenName "Natasha" -Surname "Romanoff" -SamAccountName "nromanoff" -UserPrincipalName "nromanoff@marvelhq.org" -Path "OU=Administration,OU=Staff,OU=MarvelHQ,DC=marvelhq,DC=org" -AccountPassword(ConvertTo-SecureString "Family4Forever21!" -AsPlainText -force) -Enabled $true

You would see the created user in AD.


Reset a password of a user
In the PowerShell Terminal: 
Set-ADAccountPassword -Identity nromanoff -Reset -NewPassword (ConvertTo-SecureString  -AsPlainText "Take*Down+Villians19!" -Force)


To get all enabled (active) users
In the PowerShell Terminal:
Get-ADUser -filter ‘Enabled -eq $true’

-The Get-ADUser cmdlet is used in PowerShell to retrieve information about Active Directory users.
-The filter parameter allows you to specify criteria for filtering the user objects to be returned.
-The filter 'Enabled -eq $true' is used to only retrieve user objects that are currently enabled in Active Directory.


Enabled or disabled a user with Set-ADUser.
In the terminal:
Set-ADUser -Identity “wmaximoff” -Enabled:$false

-The Set-ADUser cmdlet in PowerShell is used to modify properties of an Active Directory user.
-In the command "Set-ADUser -Identity 'wmaximoff' -Enabled:$false", the user with the username 'wmaximoff' will have their account disabled.
-The parameter -Enabled:$false sets the user's account status to disabled, preventing them from accessing resources within the Active Directory environment.
-This command effectively deactivates the user account for 'wmaximoff' in Active Directory.



